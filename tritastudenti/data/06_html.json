[
    {
        "title": "Framework Flex per HTML e CSS",
        "faqs": [
            {
                "question": "Che cos'è un framework CSS a 12 colonne?",
                "answer": "Un framework CSS a 12 colonne è una struttura standardizzata che divide la pagina in 12 sezioni uguali, permettendo una facile disposizione e allineamento degli elementi."
            },
            {
                "question": "Perché usare un framework a 12 colonne?",
                "answer": "Un framework a 12 colonne fornisce flessibilità nella progettazione di layout responsive e permette una distribuzione uniforme degli elementi su dispositivi di diverse dimensioni."
            },
            {
                "question": "Come si implementa un layout a 12 colonne in un progetto?",
                "answer": "Si implementa creando classi CSS che rappresentano ciascuna delle 12 colonne e utilizzando queste classi per definire la larghezza e la disposizione degli elementi HTML."
            },
            {
                "question": "Quali sono i vantaggi nell'utilizzo di un framework flex?",
                "answer": "Un framework flex offre una gestione semplificata degli spazi, compatibilità con diversi dispositivi e una migliore organizzazione del codice, rendendo il design più pulito e accessibile."
            }
        ]
    },
    {
        "title": "Effetti CSS in HTML",
        "faqs": [
            {
                "question": "Cosa sono le transizioni CSS e come vengono applicate?",
                "answer": "Le transizioni CSS permettono un cambiamento graduale tra stati di stile. Si configurano definendo proprietà come durata e timing."
            },
            {
                "question": "Come si usano le animazioni CSS?",
                "answer": "Le animazioni CSS si creano definendo @keyframes e utilizzando la proprietà 'animation' per specificare durata, timing, e altri parametri."
            },
            {
                "question": "Qual è la funzione dei filtri CSS?",
                "answer": "I filtri CSS aggiungono effetti visivi agli elementi, come sfocatura o modifica della luminosità, direttamente nel browser."
            },
            {
                "question": "Come si combinano più filtri CSS su un elemento?",
                "answer": "Si possono combinare più filtri CSS applicandoli contemporaneamente all'elemento, con effetti cumulativi."
            }
        ]
    },
    {
        "title": "Media Query in HTML e CSS",
        "faqs": [
            {
                "question": "Cosa sono le CSS Media Query e a cosa servono?",
                "answer": "Le CSS Media Query permettono di applicare stili CSS specifici in base a caratteristiche del dispositivo, come le dimensioni dello schermo, per realizzare layout responsive."
            },
            {
                "question": "Come si definisce una Media Query?",
                "answer": "Una Media Query si definisce specificando un tipo di media (es. screen) e una o più espressioni, come le dimensioni dello schermo, per applicare stili CSS condizionati."
            },
            {
                "question": "Quali sono le unità di misura comunemente usate nelle Media Query?",
                "answer": "Le unità di misura comunemente usate nelle Media Query includono px (pixel), em, rem e percentuali, per adattare gli stili a diverse dimensioni di schermo."
            },
            {
                "question": "Come si implementano le Media Query in un progetto web?",
                "answer": "Le Media Query si implementano nel CSS, utilizzando la sintassi @media seguita dalle condizioni specifiche, per applicare stili diversi a seconda del dispositivo."
            }
        ]
    },
    {
        "title": "Layout, VW/VH e Centratura in CSS",
        "faqs": [
            {
                "question": "Cosa significano vw e vh in CSS?",
                "answer": "vw (Viewport Width) e vh (Viewport Height) sono unità di misura in CSS che corrispondono rispettivamente al 1% della larghezza e dell'altezza del viewport."
            },
            {
                "question": "Come si differenziano vw/vh da percentuali in CSS?",
                "answer": "vw e vh sono sempre relative alle dimensioni del viewport, mentre le percentuali sono relative alle dimensioni dell'elemento contenitore."
            },
            {
                "question": "In quali situazioni si dovrebbero usare vw e vh?",
                "answer": "vw e vh sono utili per creare layout responsive che si adattano dinamicamente alle dimensioni dello schermo."
            },
            {
                "question": "Come si può centrare un elemento sia verticalmente che orizzontalmente con CSS?",
                "answer": "Si può centrare un elemento utilizzando tecniche come flexbox, il modello di box CSS, o combinando proprietà come position e transform."
            }
        ]
    },
    {
        "title": "Posizionamento in HTML e CSS",
        "faqs": [
            {
                "question": "Che cos'è il posizionamento in CSS e quali tipi esistono?",
                "answer": "Il posizionamento in CSS determina come gli elementi vengono visualizzati nella pagina. I tipi includono 'static', 'relative', 'absolute', 'fixed' e 'sticky'."
            },
            {
                "question": "Come funziona il posizionamento 'relative'?",
                "answer": "Con 'relative', l'elemento viene spostato rispetto alla sua posizione naturale, senza essere rimosso dal flusso del documento."
            },
            {
                "question": "In cosa differisce il posizionamento 'absolute'?",
                "answer": "Con 'absolute', l'elemento viene rimosso dal flusso normale del documento e posizionato rispetto al suo contenitore più vicino non statico."
            },
            {
                "question": "Quando usare il posizionamento 'fixed'?",
                "answer": "Il posizionamento 'fixed' fissa un elemento rispetto al viewport, quindi rimane fisso anche durante lo scrolling della pagina."
            }
        ]
    },
    {
        "title": "Flexbox e Layouts a Griglia in CSS",
        "faqs": [
            {
                "question": "Che cos'è Flexbox in CSS?",
                "answer": "Flexbox è un modello di layout CSS che permette di disporre gli elementi in una pagina in modo flessibile e efficiente, adattandosi alle dimensioni del contenitore."
            },
            {
                "question": "Quali sono le proprietà principali di Flexbox?",
                "answer": "Le proprietà principali di Flexbox includono 'flex-direction', 'justify-content', 'align-items', e 'flex-wrap', che controllano l'orientamento, l'allineamento e il comportamento di avvolgimento degli elementi."
            },
            {
                "question": "Come si crea una griglia con Flexbox?",
                "answer": "Per creare una griglia con Flexbox, si utilizza la proprietà 'display: flex' sul contenitore e si gestisce la disposizione degli elementi figlio con altre proprietà Flexbox."
            },
            {
                "question": "Quali sono i vantaggi di utilizzare Flexbox per i layout?",
                "answer": "Flexbox offre una maggiore facilità nella creazione di layout responsive, permette un allineamento semplice degli elementi e gestisce meglio lo spazio tra gli elementi in modi diversi a seconda delle esigenze di layout."
            }
        ]
    }





]
