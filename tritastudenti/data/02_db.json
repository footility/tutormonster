[
  {
    "title": "DB Intro",
    "faqs": [
      {
        "question": "Che cos'è un database?",
        "answer": "Un database è un sistema tecnologico che permette di gestire una collezione organizzata di dati coerenti. Fornisce strumenti per la creazione, cancellazione, aggiornamento, e ricerca avanzata di dati."
      },
      {
        "question": "Cosa si intende per RDBMS?",
        "answer": "RDBMS (Relational Database Management System) è un software che permette di gestire database relazionali, organizzando i dati in tabelle con righe e colonne."
      },
      {
        "question": "Come funzionano le transazioni in un RDBMS?",
        "answer": "Le transazioni in un RDBMS sono sequenze di operazioni che modificano i dati. Hanno proprietà ACID (Atomicità, Coerenza, Isolamento, Durabilità) per garantire l'affidabilità."
      },
      {
        "question": "Come si definisce una tabella in un database relazionale?",
        "answer": "Una tabella in un database relazionale è definita scegliendo un nome, specificando le colonne con i rispettivi tipi di dati e attributi, e assegnando una chiave primaria."
      }
    ]
  },
  {
    "title": "DB SQL Intro, phpMyAdmin, SQL Commands, Select, Where, Order By",
    "faqs": [
      {
        "question": "Come si utilizza SQL per interagire con i database?",
        "answer": "SQL (Structured Query Language) è un linguaggio standard utilizzato per interrogare, modificare e gestire dati in database relazionali. Include funzioni come selezione, inserimento, aggiornamento e cancellazione di dati."
      },
      {
        "question": "Qual è il ruolo di phpMyAdmin nella gestione dei database?",
        "answer": "PhpMyAdmin è un'applicazione web gratuita che fornisce un'interfaccia grafica per la gestione dei database MySQL. Permette di eseguire operazioni SQL, gestire tabelle e database, e visualizzare i dati."
      },
      {
        "question": "Come si scrive una query SELECT in SQL?",
        "answer": "Una query SELECT in SQL viene utilizzata per estrarre dati da una o più tabelle. Ad esempio, 'SELECT * FROM tabella' seleziona tutte le colonne da 'tabella'."
      },
      {
        "question": "Come funziona l'istruzione WHERE in SQL?",
        "answer": "L'istruzione WHERE in SQL è usata per filtrare i record che soddisfano una condizione specifica. Ad esempio, 'SELECT * FROM tabella WHERE condizione' restituisce solo i record che soddisfano 'condizione'."
      },
      {
        "question": "Cosa fa l'istruzione ORDER BY in SQL?",
        "answer": "ORDER BY in SQL ordina i risultati di una query in base a uno o più campi, in ordine ascendente o discendente. Ad esempio, 'SELECT * FROM tabella ORDER BY colonna ASC'."
      }
    ]
  },
  {
    "title": "DB SQL Group By Joins",
    "faqs": [
      {
        "question": "Cos'è l'istruzione SQL GROUP BY?",
        "answer": "L'istruzione SQL GROUP BY viene utilizzata per raggruppare righe con lo stesso valore in una o più colonne. È spesso utilizzata con funzioni di aggregazione come COUNT, SUM, AVG, ecc."
      },
      {
        "question": "Cosa fa l'istruzione SQL JOIN?",
        "answer": "L'istruzione SQL JOIN viene utilizzata per combinare righe da due o più tabelle basate su una relazione tra di loro. Ci sono diversi tipi di JOIN, come INNER JOIN, LEFT JOIN, RIGHT JOIN, ecc."
      },
      {
        "question": "Qual è l'obiettivo principale dell'aggregazione dei dati con GROUP BY in SQL?",
        "answer": "L'obiettivo principale dell'aggregazione dei dati con GROUP BY in SQL è riassumere i dati in modo significativo. Ad esempio, è possibile calcolare la somma totale di vendite per ogni categoria di prodotti."
      },
      {
        "question": "Cosa significa INNER JOIN in SQL?",
        "answer": "INNER JOIN in SQL restituisce solo le righe che hanno corrispondenze in entrambe le tabelle coinvolte nella query. Le righe che non hanno corrispondenze vengono escluse."
      },
      {
        "question": "Qual è la differenza tra LEFT JOIN e RIGHT JOIN in SQL?",
        "answer": "LEFT JOIN restituisce tutte le righe dalla tabella a sinistra (prima nella query) e le righe corrispondenti dalla tabella a destra. RIGHT JOIN fa il contrario, restituendo tutte le righe dalla tabella a destra e le righe corrispondenti dalla tabella a sinistra."
      }
    ]
  }
]
